{"version":3,"file":"errorhandler.js","sources":["../../src/errorhandler.ts"],"sourcesContent":["import { getCurrentHub } from '@sentry/browser';\nimport { consoleSandbox } from '@sentry/utils';\n\nimport type { ViewModel, Vue, VueOptions } from './types';\nimport { formatComponentName, generateComponentTrace } from './vendor/components';\n\ntype UnknownFunc = (...args: unknown[]) => void;\n\nexport const attachErrorHandler = (app: Vue, options: VueOptions): void => {\n  const { errorHandler, warnHandler, silent } = app.config;\n\n  app.config.errorHandler = (error: Error, vm: ViewModel, lifecycleHook: string): void => {\n    const componentName = formatComponentName(vm, false);\n    const trace = vm ? generateComponentTrace(vm) : '';\n    const metadata: Record<string, unknown> = {\n      componentName,\n      lifecycleHook,\n      trace,\n    };\n\n    if (options.attachProps && vm) {\n      // Vue2 - $options.propsData\n      // Vue3 - $props\n      if (vm.$options && vm.$options.propsData) {\n        metadata.propsData = vm.$options.propsData;\n      } else if (vm.$props) {\n        metadata.propsData = vm.$props;\n      }\n    }\n\n    // Capture exception in the next event loop, to make sure that all breadcrumbs are recorded in time.\n    setTimeout(() => {\n      getCurrentHub().captureException(error, {\n        captureContext: { contexts: { vue: metadata } },\n        mechanism: { handled: false },\n      });\n    });\n\n    if (typeof errorHandler === 'function') {\n      (errorHandler as UnknownFunc).call(app, error, vm, lifecycleHook);\n    }\n\n    if (options.logErrors) {\n      const hasConsole = typeof console !== 'undefined';\n      const message = `Error in ${lifecycleHook}: \"${error && error.toString()}\"`;\n\n      if (warnHandler) {\n        (warnHandler as UnknownFunc).call(null, message, vm, trace);\n      } else if (hasConsole && !silent) {\n        consoleSandbox(() => {\n          // eslint-disable-next-line no-console\n          console.error(`[Vue warn]: ${message}${trace}`);\n        });\n      }\n    }\n  };\n};\n"],"names":["formatComponentName","generateComponentTrace","getCurrentHub","consoleSandbox"],"mappings":";;;;;;AAQA,MAAA,kBAAA,GAAA,CAAA,GAAA,EAAA,OAAA,KAAA;AACA,EAAA,MAAA,EAAA,YAAA,EAAA,WAAA,EAAA,MAAA,EAAA,GAAA,GAAA,CAAA,MAAA,CAAA;AACA;AACA,EAAA,GAAA,CAAA,MAAA,CAAA,YAAA,GAAA,CAAA,KAAA,EAAA,EAAA,EAAA,aAAA,KAAA;AACA,IAAA,MAAA,aAAA,GAAAA,8BAAA,CAAA,EAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,MAAA,KAAA,GAAA,EAAA,GAAAC,iCAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,QAAA,GAAA;AACA,MAAA,aAAA;AACA,MAAA,aAAA;AACA,MAAA,KAAA;AACA,KAAA,CAAA;AACA;AACA,IAAA,IAAA,OAAA,CAAA,WAAA,IAAA,EAAA,EAAA;AACA;AACA;AACA,MAAA,IAAA,EAAA,CAAA,QAAA,IAAA,EAAA,CAAA,QAAA,CAAA,SAAA,EAAA;AACA,QAAA,QAAA,CAAA,SAAA,GAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA;AACA,OAAA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA;AACA,QAAA,QAAA,CAAA,SAAA,GAAA,EAAA,CAAA,MAAA,CAAA;AACA,OAAA;AACA,KAAA;AACA;AACA;AACA,IAAA,UAAA,CAAA,MAAA;AACA,MAAAC,qBAAA,EAAA,CAAA,gBAAA,CAAA,KAAA,EAAA;AACA,QAAA,cAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA;AACA,QAAA,SAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA;AACA,OAAA,CAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA;AACA,IAAA,IAAA,OAAA,YAAA,KAAA,UAAA,EAAA;AACA,MAAA,CAAA,YAAA,GAAA,IAAA,CAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,aAAA,CAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,IAAA,OAAA,CAAA,SAAA,EAAA;AACA,MAAA,MAAA,UAAA,GAAA,OAAA,OAAA,KAAA,WAAA,CAAA;AACA,MAAA,MAAA,OAAA,GAAA,CAAA,SAAA,EAAA,aAAA,CAAA,GAAA,EAAA,KAAA,IAAA,KAAA,CAAA,QAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,MAAA,IAAA,WAAA,EAAA;AACA,QAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,KAAA,CAAA,CAAA;AACA,OAAA,MAAA,IAAA,UAAA,IAAA,CAAA,MAAA,EAAA;AACA,QAAAC,oBAAA,CAAA,MAAA;AACA;AACA,UAAA,OAAA,CAAA,KAAA,CAAA,CAAA,YAAA,EAAA,OAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,SAAA,CAAA,CAAA;AACA,OAAA;AACA,KAAA;AACA,GAAA,CAAA;AACA;;;;"}