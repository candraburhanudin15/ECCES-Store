{"version":3,"file":"integration.js","sources":["../../src/integration.ts"],"sourcesContent":["import { hasTracingEnabled } from '@sentry/core';\nimport type { Hub, Integration } from '@sentry/types';\nimport { GLOBAL_OBJ, arrayify, consoleSandbox } from '@sentry/utils';\n\nimport { DEFAULT_HOOKS } from './constants';\nimport { attachErrorHandler } from './errorhandler';\nimport { createTracingMixins } from './tracing';\nimport type { Options, Vue, VueOptions } from './types';\n\nconst globalWithVue = GLOBAL_OBJ as typeof GLOBAL_OBJ & { Vue: Vue };\n\nconst DEFAULT_CONFIG: VueOptions = {\n  Vue: globalWithVue.Vue,\n  attachProps: true,\n  logErrors: true,\n  hooks: DEFAULT_HOOKS,\n  timeout: 2000,\n  trackComponents: false,\n};\n\n/**\n * Initialize Vue error & performance tracking.\n */\nexport class VueIntegration implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Vue';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  private readonly _options: Partial<VueOptions>;\n\n  public constructor(options: Partial<VueOptions> = {}) {\n    this.name = VueIntegration.id;\n    this._options = options;\n  }\n\n  /** @inheritDoc */\n  public setupOnce(_addGlobaleventProcessor: unknown, getCurrentHub: () => Hub): void {\n    this._setupIntegration(getCurrentHub());\n  }\n\n  /** Just here for easier testing */\n  protected _setupIntegration(hub: Hub): void {\n    const client = hub.getClient();\n    const options: Options = { ...DEFAULT_CONFIG, ...(client && client.getOptions()), ...this._options };\n\n    if (!options.Vue && !options.app) {\n      consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `[@sentry/vue]: Misconfigured SDK. Vue specific errors will not be captured.\nUpdate your \\`Sentry.init\\` call with an appropriate config option:\n\\`app\\` (Application Instance - Vue 3) or \\`Vue\\` (Vue Constructor - Vue 2).`,\n        );\n      });\n      return;\n    }\n\n    if (options.app) {\n      const apps = arrayify(options.app);\n      apps.forEach(app => vueInit(app, options));\n    } else if (options.Vue) {\n      vueInit(options.Vue, options);\n    }\n  }\n}\n\nconst vueInit = (app: Vue, options: Options): void => {\n  // Check app is not mounted yet - should be mounted _after_ init()!\n  // This is _somewhat_ private, but in the case that this doesn't exist we simply ignore it\n  // See: https://github.com/vuejs/core/blob/eb2a83283caa9de0a45881d860a3cbd9d0bdd279/packages/runtime-core/src/component.ts#L394\n  const appWithInstance = app as Vue & {\n    _instance?: {\n      isMounted?: boolean;\n    };\n  };\n\n  const isMounted = appWithInstance._instance && appWithInstance._instance.isMounted;\n  if (isMounted === true) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sentry/vue]: Misconfigured SDK. Vue app is already mounted. Make sure to call `app.mount()` after `Sentry.init()`.',\n      );\n    });\n  }\n\n  attachErrorHandler(app, options);\n\n  if (hasTracingEnabled(options)) {\n    app.mixin(\n      createTracingMixins({\n        ...options,\n        ...options.tracingOptions,\n      }),\n    );\n  }\n};\n"],"names":["GLOBAL_OBJ","DEFAULT_HOOKS","consoleSandbox","arrayify","attachErrorHandler","hasTracingEnabled","createTracingMixins"],"mappings":";;;;;;;;AASA,MAAA,aAAA,GAAAA,gBAAA,EAAA;AACA;AACA,MAAA,cAAA,GAAA;AACA,EAAA,GAAA,EAAA,aAAA,CAAA,GAAA;AACA,EAAA,WAAA,EAAA,IAAA;AACA,EAAA,SAAA,EAAA,IAAA;AACA,EAAA,KAAA,EAAAC,uBAAA;AACA,EAAA,OAAA,EAAA,IAAA;AACA,EAAA,eAAA,EAAA,KAAA;AACA,CAAA,CAAA;AACA;AACA;AACA;AACA;AACA,MAAA,cAAA,EAAA;AACA;AACA;AACA;AACA,GAAA,OAAA,YAAA,GAAA,CAAA,IAAA,CAAA,EAAA,GAAA,MAAA,CAAA;AACA;AACA;AACA;AACA;;AAKA,GAAA,WAAA,CAAA,OAAA,GAAA,EAAA,EAAA;AACA,IAAA,IAAA,CAAA,IAAA,GAAA,cAAA,CAAA,EAAA,CAAA;AACA,IAAA,IAAA,CAAA,QAAA,GAAA,OAAA,CAAA;AACA,GAAA;AACA;AACA;AACA,GAAA,SAAA,CAAA,wBAAA,EAAA,aAAA,EAAA;AACA,IAAA,IAAA,CAAA,iBAAA,CAAA,aAAA,EAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA;AACA,GAAA,iBAAA,CAAA,GAAA,EAAA;AACA,IAAA,MAAA,MAAA,GAAA,GAAA,CAAA,SAAA,EAAA,CAAA;AACA,IAAA,MAAA,OAAA,GAAA,EAAA,GAAA,cAAA,EAAA,IAAA,MAAA,IAAA,MAAA,CAAA,UAAA,EAAA,CAAA,EAAA,GAAA,IAAA,CAAA,QAAA,EAAA,CAAA;AACA;AACA,IAAA,IAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,OAAA,CAAA,GAAA,EAAA;AACA,MAAAC,oBAAA,CAAA,MAAA;AACA;AACA,QAAA,OAAA,CAAA,IAAA;AACA,UAAA,CAAA;AACA;AACA,4EAAA,CAAA;AACA,SAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA,MAAA,OAAA;AACA,KAAA;AACA;AACA,IAAA,IAAA,OAAA,CAAA,GAAA,EAAA;AACA,MAAA,MAAA,IAAA,GAAAC,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,OAAA,CAAA,GAAA,IAAA,OAAA,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,KAAA,MAAA,IAAA,OAAA,CAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,OAAA,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA,CAAA,CAAA,cAAA,CAAA,YAAA,EAAA,CAAA;AACA;AACA,MAAA,OAAA,GAAA,CAAA,GAAA,EAAA,OAAA,KAAA;AACA;AACA;AACA;AACA,EAAA,MAAA,eAAA,GAAA,GAAA;;AAIA,CAAA;AACA;AACA,EAAA,MAAA,SAAA,GAAA,eAAA,CAAA,SAAA,IAAA,eAAA,CAAA,SAAA,CAAA,SAAA,CAAA;AACA,EAAA,IAAA,SAAA,KAAA,IAAA,EAAA;AACA,IAAAD,oBAAA,CAAA,MAAA;AACA;AACA,MAAA,OAAA,CAAA,IAAA;AACA,QAAA,sHAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA,CAAA;AACA,GAAA;AACA;AACA,EAAAE,+BAAA,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAAC,sBAAA,CAAA,OAAA,CAAA,EAAA;AACA,IAAA,GAAA,CAAA,KAAA;AACA,MAAAC,2BAAA,CAAA;AACA,QAAA,GAAA,OAAA;AACA,QAAA,GAAA,OAAA,CAAA,cAAA;AACA,OAAA,CAAA;AACA,KAAA,CAAA;AACA,GAAA;AACA,CAAA;;;;"}